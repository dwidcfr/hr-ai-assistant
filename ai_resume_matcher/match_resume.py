import requests
from config import API_URL, HEADERS, MODEL


def match_resume(resume_text: str, job_description: str) -> str:
    system_prompt = "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ø–æ–¥–±–æ—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–ª–∞. –û—Ü–µ–Ω–∏, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –≤–∞–∫–∞–Ω—Å–∏—é."
    user_prompt = f"""
–û—Ü–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º:
1. –ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è (0‚Äì100%)
2. –°–æ–≤–ø–∞–¥–µ–Ω–∏—è
3. –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
4. –°–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ä–µ–∑—é–º–µ
5. –§–∏–Ω–∞–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ ‚Äî –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–ª–∏ –Ω–µ—Ç

–í–∞–∫–∞–Ω—Å–∏—è:
{job_description}

–†–µ–∑—é–º–µ:
{resume_text}
"""

    payload = {
        "model": MODEL,
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt},
        ],
        "temperature": 0.4,
        "max_tokens": 1024,
    }

    response = requests.post(API_URL, headers=HEADERS, json=payload)

    if response.status_code == 200:
        return response.json()["choices"][0]["message"]["content"]
    else:
        raise Exception(f"Groq API Error {response.status_code}: {response.text}")


if __name__ == "__main__":
    with open("../data/job.txt", "r", encoding="utf-8") as f:
        job_desc = f.read()
    with open("../data/resume.txt", "r", encoding="utf-8") as f:
        resume = f.read()

    print("üîç –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—é–º–µ...")
    result = match_resume(resume, job_desc)
    print("\nüìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç:\n")
    print(result)
