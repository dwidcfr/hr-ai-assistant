import requests
from config import API_URL, HEADERS, MODEL


def improve_resume(resume_text: str, job_description: str) -> str:
    system_prompt = (
        "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –∫–∞—Ä—å–µ—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∏ AI-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é —Ä–µ–∑—é–º–µ."
    )
    user_prompt = f"""
–£–ª—É—á—à–∏—Ç–µ –¥–∞–Ω–Ω–æ–µ —Ä–µ–∑—é–º–µ –ø–æ–¥ —Å–ª–µ–¥—É—é—â—É—é –≤–∞–∫–∞–Ω—Å–∏—é. –°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ –∫–ª—é—á–µ–≤—ã—Ö –Ω–∞–≤—ã–∫–∞—Ö, —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–∏ –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏.
–í—ã–≤–µ–¥–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–µ —Ä–µ–∑—é–º–µ –∫–∞–∫ —Ç–µ–∫—Å—Ç, –≥–æ—Ç–æ–≤—ã–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
–ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –¢–í–û–Ø –ó–ê–î–ê–ß–ê –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ü–†–ò–ë–õ–ò–ó–ò–¢–¨ –†–ï–ó–Æ–ú–ï –ö –í–ê–ö–ê–ù–°–ò–ò –ò–°–•–û–î–Ø –ò–ó –ù–ê–í–´–ö–û–í –ö–û–¢–û–†–´–ï –û–¢–ú–ï–ß–ï–ù–ù–´ –í –°–ê–ú–û–ú –†–ï–ó–Æ–ú–ï. –ù–ï –î–û–ë–ê–í–õ–Ø–ô –¢–û –ß–ï–ì–û –ù–ï–¢!

–í–∞–∫–∞–Ω—Å–∏—è:
{job_description}

–†–µ–∑—é–º–µ:
{resume_text}
"""

    payload = {
        "model": MODEL,
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt},
        ],
        "temperature": 0.5,
        "max_tokens": 1500,
    }

    response = requests.post(API_URL, headers=HEADERS, json=payload)

    if response.status_code == 200:
        return response.json()["choices"][0]["message"]["content"]
    else:
        raise Exception(f"Groq API Error {response.status_code}: {response.text}")


if __name__ == "__main__":
    with open("../data/resume.txt", "r", encoding="utf-8") as f:
        resume = f.read()
    with open("../data/job.txt", "r", encoding="utf-8") as f:
        job = f.read()

    improved = improve_resume(resume, job)
    print("üìÑ –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ä–µ–∑—é–º–µ:\n")
    print(improved)
