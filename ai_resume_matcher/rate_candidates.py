import requests
import os
from config import API_URL, HEADERS, MODEL


def rate_candidates(resumes: list[str], job_description: str) -> str:
    system_prompt = "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ø–æ–¥–±–æ—Ä—É –ø–µ—Ä—Å–æ–Ω–∞–ª–∞. –û—Ü–µ–Ω–∏–≤–∞–π –∏ —Ä–∞–Ω–∂–∏—Ä—É–π —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø–æ –≤–∞–∫–∞–Ω—Å–∏–∏."

    formatted_resumes = "\n\n".join(
        [f"–ö–∞–Ω–¥–∏–¥–∞—Ç {i + 1}:\n{resume}" for i, resume in enumerate(resumes)]
    )

    user_prompt = f"""
–í–∞–∫–∞–Ω—Å–∏—è:
{job_description}

–†–µ–∑—é–º–µ:
{formatted_resumes}

–ó–∞–¥–∞—á–∞:
- –û—Ü–µ–Ω–∏ –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –ø–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—é –≤–∞–∫–∞–Ω—Å–∏–∏
- –î–∞–π –∫—Ä–∞—Ç–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
- –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π –ø–æ —É–±—ã–≤–∞–Ω–∏—é –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç–∏
- –í—ã–≤–µ–¥–∏ —Ä–µ–π—Ç–∏–Ω–≥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:

1. –ö–∞–Ω–¥–∏–¥–∞—Ç X ‚Äî 87%
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...

2. –ö–∞–Ω–¥–∏–¥–∞—Ç Y ‚Äî 75%
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...

–∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
"""

    payload = {
        "model": MODEL,
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt},
        ],
        "temperature": 0.3,
        "max_tokens": 1800,
    }

    response = requests.post(API_URL, headers=HEADERS, json=payload)

    if response.status_code == 200:
        return response.json()["choices"][0]["message"]["content"]
    else:
        raise Exception(f"Groq API Error {response.status_code}: {response.text}")


if __name__ == "__main__":
    resumes_dir = "resumes/"
    job_file = "../data/job.txt"

    if not os.path.exists(job_file):
        print("‚ùå –§–∞–π–ª job.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        exit()

    resumes = []
    for filename in sorted(os.listdir(resumes_dir)):
        if filename.endswith(".txt"):
            with open(os.path.join(resumes_dir, filename), "r", encoding="utf-8") as f:
                resumes.append(f.read())

    if not resumes:
        print("‚ùå –í –ø–∞–ø–∫–µ 'resumes/' –Ω–µ—Ç .txt —Ñ–∞–π–ª–æ–≤ —Å —Ä–µ–∑—é–º–µ.")
        exit()

    with open(job_file, "r", encoding="utf-8") as f:
        job_description = f.read()

    result = rate_candidates(resumes, job_description)
    print("\nüèÜ –†–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤:\n")
    print(result)
